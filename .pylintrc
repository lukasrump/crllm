[MAIN]
load-plugins=
    pylint.extensions.check_elif,
    pylint.extensions.bad_builtin,
    pylint.extensions.docparams,
    pylint.extensions.for_any_all,
    pylint.extensions.set_membership,
    pylint.extensions.code_style,
    pylint.extensions.overlapping_exceptions,
    pylint.extensions.typing,
    pylint.extensions.redefined_variable_type,
    pylint.extensions.comparison_placement,
    pylint.extensions.mccabe,

suggestion-mode=yes
unsafe-load-any-extension=no
extension-pkg-allow-list=
py-version = 3.8
limit-inference-results=100
fail-under=10.0
fail-on=


[MESSAGES CONTROL]
enable=
    use-symbolic-message-instead,
    useless-suppression,

disable=
    attribute-defined-outside-init,
    missing-docstring,
    protected-access,
    too-few-public-methods,
    cyclic-import,
    import-error,
    no-name-in-module


[REPORTS]
output-format=text
reports=no
evaluation=max(0, 0 if fatal else 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10))
score=yes

[SIMILARITIES]
min-similarity-lines=6
ignore-comments=yes
ignore-docstrings=yes
ignore-imports=yes
ignore-signatures=yes

[FORMAT]
max-line-length=120
ignore-long-lines=^\s*(# )?<?https?://\S+>?$
single-line-if-stmt=no
single-line-class-stmt=no
max-module-lines=1000
indent-string='    '
indent-after-paren=4


[BASIC]
function-naming-style=snake_case
function-rgx=[a-z_][a-z0-9_]{2,30}$
variable-naming-style=snake_case
variable-rgx=[a-z_][a-z0-9_]{2,30}$
const-naming-style=UPPER_CASE
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$
attr-naming-style=snake_case
attr-rgx=[a-z_][a-z0-9_]{2,}$
argument-naming-style=snake_case
argument-rgx=[a-z_][a-z0-9_]{2,30}$
class-attribute-naming-style=any
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$
class-const-naming-style=UPPER_CASE
inlinevar-naming-style=any
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$
class-naming-style=PascalCase
class-rgx=[A-Z_][a-zA-Z0-9]+$
module-naming-style=snake_case
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$


# Naming style matching correct method names.
method-naming-style=snake_case

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,}$
no-docstring-rgx=__.*__

docstring-min-length=-1
property-classes=abc.abstractproperty


[SPELLING]
spelling-dict=
spelling-ignore-words=
spelling-ignore-comment-directives=fmt: on,fmt: off,noqa:,noqa,nosec,isort:skip,mypy:,pragma:,# noinspection
spelling-store-unknown-words=no
max-spelling-suggestions=2


[DESIGN]
max-args=10
max-locals=25
max-returns=11
max-branches=27
max-statements=100
max-parents=7
ignored-parents=
max-attributes=11
min-public-methods=2
max-public-methods=25
max-bool-expr=5
exclude-too-few-public-methods=
max-complexity=10

[CLASSES]
defining-attr-methods=__init__,__new__,setUp,__post_init__
check-protected-access-in-special-methods=yes
known-third-party=enchant

[TYPING]
runtime-typing = yes

[REFACTORING]
max-nested-blocks=5
never-returning-functions=sys.exit,argparse.parse_error

[STRING]
check-quote-consistency=yes


